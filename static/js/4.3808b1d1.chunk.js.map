{"version":3,"sources":["../node_modules/axios/lib/utils.js","../Requestable.js","../node_modules/github-api/node_modules/debug/src/browser.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/js-base64/base64.js","../Gist.js","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/github-api/node_modules/debug/src/debug.js","../node_modules/github-api/node_modules/ms/index.js","../User.js","../Issue.js","../Search.js","../RateLimit.js","../Repository.js","../node_modules/utf8/utf8.js","../node_modules/webpack/buildin/module.js","../Organization.js","../Team.js","../Markdown.js","../Project.js","../GitHub.js"],"names":["bind","require","toString","Object","prototype","isArray","val","call","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","i","l","length","key","hasOwnProperty","module","exports","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","log","ResponseError","response","Error","Requestable","this","apiBase","token","auth","username","password","AcceptHeader","Base64","path","url","__apiBase","newCacheBuster","Date","raw","headers","requestOptions","date","method","data","cb","__getURL","__getRequestHeaders","queryParams","METHODS_WITH_NO_BODY","methodHasNoBody","config","params","responseType","requestPromise","callbackErrorOrThrow","_request","options","results","thisGroup","message","nextUrl","linksHeader","reduce","link","getNextPage","parseInt","object","error","status","statusText","JSON","load","r","storage","debug","e","process","DEBUG","console","Function","apply","formatArgs","args","useColors","namespace","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","removeItem","type","documentElement","style","WebkitAppearance","firebug","exception","table","userAgent","toLowerCase","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","stringify","err","enable","Array","utils","encode","encodeURIComponent","paramsSerializer","serializedParams","parts","toISOString","push","join","hashmarkIndex","indexOf","value","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","request","unescape","Authorization","btoa","fullPath","baseURL","open","toUpperCase","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","undefined","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","Cancel","global","factory","fromUint8Array","_Base64","version","b64chars","b64tab","bin","t","charAt","fromCharCode","String","cb_utob","cc","re_utob","utob","u","cb_encode","ccc","padlen","ord","RangeError","_encode","mkUriSafe","b64","m0","urisafe","encodeURI","Uint8Array","a0","a1","a2","toUint8Array","re_btou","cb_btou","cccc","offset","btou","cb_decode","len","n","chars","_atob","atob","_decode","_fromURI","decode","from","noConflict","VERSION","fromBase64","toBase64","defineProperty","noEnum","enumerable","writable","configurable","extendString","self","Gist","gist","_request204or404","_requestAllPages","revision","comment","body","Axios","mergeConfig","createInstance","defaultConfig","context","instance","axios","create","instanceConfig","CancelToken","isCancel","all","promises","spread","isAxiosError","default","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","normalizedName","name","toJSON","description","number","fileName","lineNumber","columnNumber","stack","write","expires","domain","secure","cookie","toGMTString","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","split","line","substr","originURL","msie","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","location","requestURL","executor","TypeError","resolvePromise","callback","arr","payload","prevTime","createDebug","enabled","curr","ms","prev","coerce","format","formatter","logFn","Math","abs","selectColor","init","disable","names","skips","s","m","d","y","plural","floor","ceil","exec","parseFloat","isNaN","long","round","fmtShort","User","endpoint","_getOptionsWithDefaults","__getScopedUrl","_dateToISO","Issue","issueData","issue","milestone","milestoneData","labelData","label","Search","withOptions","_search","RateLimit","Repository","branch","sha","ref","base","head","treeSHA","postBody","_getContentObject","Utf8","encoding","Buffer","Blob","baseTreeSHA","blobSHA","newTree","base_tree","tree","mode","baseSHA","parent","parents","commitSHA","force","org","oldBranch","newBranch","getRef","getSha","deleteCommit","oldPath","newPath","oldSha","map","commit","filePath","shouldEncode","author","committer","root","freeExports","freeGlobal","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","utf8","codePoints","byteString","tmp","array","ucs2encode","define","webpackPolyfill","deprecate","paths","children","get","Organization","direction","Team","owner","repo","Markdown","Project","colId","position","listProjectColumns","column","cards","cardsInColumns","cardId","column_id","GitHub","user","organization","teamId","_getFullName","query","fullname"],"mappings":"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","file":"static/js/4.3808b1d1.chunk.js","sourcesContent":["'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/**\n * @file\n * @copyright  2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport axios from 'axios';\nimport debug from 'debug';\nimport {Base64} from 'js-base64';\n\nconst log = debug('github:request');\n\n/**\n * The error structure returned when a network call fails\n */\nclass ResponseError extends Error {\n   /**\n    * Construct a new ResponseError\n    * @param {string} message - an message to return instead of the the default error message\n    * @param {string} path - the requested path\n    * @param {Object} response - the object returned by Axios\n    */\n   constructor(message, path, response) {\n      super(message);\n      this.path = path;\n      this.request = response.config;\n      this.response = (response || {}).response || response;\n      this.status = response.status;\n   }\n}\n\n/**\n * Requestable wraps the logic for making http requests to the API\n */\nclass Requestable {\n   /**\n    * Either a username and password or an oauth token for Github\n    * @typedef {Object} Requestable.auth\n    * @prop {string} [username] - the Github username\n    * @prop {string} [password] - the user's password\n    * @prop {token} [token] - an OAuth token\n    */\n   /**\n    * Initialize the http internals.\n    * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is\n    *                                  not provided request will be made unauthenticated\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    * @param {string} [AcceptHeader=v3] - the accept header for the requests\n    */\n   constructor(auth, apiBase, AcceptHeader) {\n      this.__apiBase = apiBase || 'https://api.github.com';\n      this.__auth = {\n         token: auth.token,\n         username: auth.username,\n         password: auth.password,\n      };\n      this.__AcceptHeader = AcceptHeader || 'v3';\n\n      if (auth.token) {\n         this.__authorizationHeader = 'token ' + auth.token;\n      } else if (auth.username && auth.password) {\n         this.__authorizationHeader = 'Basic ' + Base64.encode(auth.username + ':' + auth.password);\n      }\n   }\n\n   /**\n    * Compute the URL to use to make a request.\n    * @private\n    * @param {string} path - either a URL relative to the API base or an absolute URL\n    * @return {string} - the URL to use\n    */\n   __getURL(path) {\n      let url = path;\n\n      if (path.indexOf('//') === -1) {\n         url = this.__apiBase + path;\n      }\n\n      let newCacheBuster = 'timestamp=' + new Date().getTime();\n      return url.replace(/(timestamp=\\d+)/, newCacheBuster);\n   }\n\n   /**\n    * Compute the headers required for an API request.\n    * @private\n    * @param {boolean} raw - if the request should be treated as JSON or as a raw request\n    * @param {string} AcceptHeader - the accept header for the request\n    * @return {Object} - the headers to use in the request\n    */\n   __getRequestHeaders(raw, AcceptHeader) {\n      let headers = {\n         'Content-Type': 'application/json;charset=UTF-8',\n         'Accept': 'application/vnd.github.' + (AcceptHeader || this.__AcceptHeader),\n      };\n\n      if (raw) {\n         headers.Accept += '.raw';\n      }\n      headers.Accept += '+json';\n\n      if (this.__authorizationHeader) {\n         headers.Authorization = this.__authorizationHeader;\n      }\n\n      return headers;\n   }\n\n   /**\n    * Sets the default options for API requests\n    * @protected\n    * @param {Object} [requestOptions={}] - the current options for the request\n    * @return {Object} - the options to pass to the request\n    */\n   _getOptionsWithDefaults(requestOptions = {}) {\n      if (!(requestOptions.visibility || requestOptions.affiliation)) {\n         requestOptions.type = requestOptions.type || 'all';\n      }\n      requestOptions.sort = requestOptions.sort || 'updated';\n      requestOptions.per_page = requestOptions.per_page || '100'; // eslint-disable-line\n\n      return requestOptions;\n   }\n\n   /**\n    * if a `Date` is passed to this function it will be converted to an ISO string\n    * @param {*} date - the object to attempt to coerce into an ISO date string\n    * @return {string} - the ISO representation of `date` or whatever was passed in if it was not a date\n    */\n   _dateToISO(date) {\n      if (date && (date instanceof Date)) {\n         date = date.toISOString();\n      }\n\n      return date;\n   }\n\n   /**\n    * A function that receives the result of the API request.\n    * @callback Requestable.callback\n    * @param {Requestable.Error} error - the error returned by the API or `null`\n    * @param {(Object|true)} result - the data returned by the API or `true` if the API returns `204 No Content`\n    * @param {Object} request - the raw {@linkcode https://github.com/mzabriskie/axios#response-schema Response}\n    */\n   /**\n    * Make a request.\n    * @param {string} method - the method for the request (GET, PUT, POST, DELETE)\n    * @param {string} path - the path for the request\n    * @param {*} [data] - the data to send to the server. For HTTP methods that don't have a body the data\n    *                   will be sent as query parameters\n    * @param {Requestable.callback} [cb] - the callback for the request\n    * @param {boolean} [raw=false] - if the request should be sent as raw. If this is a falsy value then the\n    *                              request will be made as JSON\n    * @return {Promise} - the Promise for the http request\n    */\n   _request(method, path, data, cb, raw) {\n      const url = this.__getURL(path);\n\n      const AcceptHeader = (data || {}).AcceptHeader;\n      if (AcceptHeader) {\n         delete data.AcceptHeader;\n      }\n      const headers = this.__getRequestHeaders(raw, AcceptHeader);\n\n      let queryParams = {};\n\n      const shouldUseDataAsParams = data && (typeof data === 'object') && methodHasNoBody(method);\n      if (shouldUseDataAsParams) {\n         queryParams = data;\n         data = undefined;\n      }\n\n      const config = {\n         url: url,\n         method: method,\n         headers: headers,\n         params: queryParams,\n         data: data,\n         responseType: raw ? 'text' : 'json',\n      };\n\n      log(`${config.method} to ${config.url}`);\n      const requestPromise = axios(config).catch(callbackErrorOrThrow(cb, path));\n\n      if (cb) {\n         requestPromise.then((response) => {\n            if (response.data && Object.keys(response.data).length > 0) {\n               // When data has results\n               cb(null, response.data, response);\n            } else if (config.method !== 'GET' && Object.keys(response.data).length < 1) {\n               // True when successful submit a request and receive a empty object\n               cb(null, (response.status < 300), response);\n            } else {\n               cb(null, response.data, response);\n            }\n         });\n      }\n\n      return requestPromise;\n   }\n\n   /**\n    * Make a request to an endpoint the returns 204 when true and 404 when false\n    * @param {string} path - the path to request\n    * @param {Object} data - any query parameters for the request\n    * @param {Requestable.callback} cb - the callback that will receive `true` or `false`\n    * @param {method} [method=GET] - HTTP Method to use\n    * @return {Promise} - the promise for the http request\n    */\n   _request204or404(path, data, cb, method = 'GET') {\n      return this._request(method, path, data)\n         .then(function success(response) {\n            if (cb) {\n               cb(null, true, response);\n            }\n            return true;\n         }, function failure(response) {\n            if (response.response.status === 404) {\n               if (cb) {\n                  cb(null, false, response);\n               }\n               return false;\n            }\n\n            if (cb) {\n               cb(response);\n            }\n            throw response;\n         });\n   }\n\n   /**\n    * Make a request and fetch all the available data. Github will paginate responses so for queries\n    * that might span multiple pages this method is preferred to {@link Requestable#request}\n    * @param {string} path - the path to request\n    * @param {Object} options - the query parameters to include\n    * @param {Requestable.callback} [cb] - the function to receive the data. The returned data will always be an array.\n    * @param {Object[]} results - the partial results. This argument is intended for internal use only.\n    * @return {Promise} - a promise which will resolve when all pages have been fetched\n    * @deprecated This will be folded into {@link Requestable#_request} in the 2.0 release.\n    */\n   _requestAllPages(path, options, cb, results) {\n      results = results || [];\n\n      return this._request('GET', path, options)\n         .then((response) => {\n            let thisGroup;\n            if (response.data instanceof Array) {\n               thisGroup = response.data;\n            } else if (response.data.items instanceof Array) {\n               thisGroup = response.data.items;\n            } else {\n               let message = `cannot figure out how to append ${response.data} to the result set`;\n               throw new ResponseError(message, path, response);\n            }\n            results.push(...thisGroup);\n\n            const nextUrl = getNextPage(response.headers.link);\n            if(nextUrl) {\n               if (!options) {\n                  options = {};\n               }\n               options.page = parseInt(\n                 nextUrl.match(/([&\\?]page=[0-9]*)/g)\n                   .shift()\n                   .split('=')\n                   .pop()\n               );\n               if (!(options && typeof options.page !== 'number')) {\n                  log(`getting next page: ${nextUrl}`);\n                  return this._requestAllPages(nextUrl, options, cb, results);\n               }\n            }\n\n            if (cb) {\n               cb(null, results, response);\n            }\n\n            response.data = results;\n            return response;\n         }).catch(callbackErrorOrThrow(cb, path));\n   }\n}\n\nmodule.exports = Requestable;\n\n// ////////////////////////// //\n//  Private helper functions  //\n// ////////////////////////// //\nconst METHODS_WITH_NO_BODY = ['GET', 'HEAD', 'DELETE'];\nfunction methodHasNoBody(method) {\n   return METHODS_WITH_NO_BODY.indexOf(method) !== -1;\n}\n\nfunction getNextPage(linksHeader = '') {\n   const links = linksHeader.split(/\\s*,\\s*/); // splits and strips the urls\n   return links.reduce(function(nextUrl, link) {\n      if (link.search(/rel=\"next\"/) !== -1) {\n         return (link.match(/<(.*)>/) || [])[1];\n      }\n\n      return nextUrl;\n   }, undefined);\n}\n\nfunction callbackErrorOrThrow(cb, path) {\n   return function handler(object) {\n      let error;\n      if (object.hasOwnProperty('config')) {\n         const {response: {status, statusText}, config: {method, url}} = object;\n         let message = (`${status} error making request ${method} ${url}: \"${statusText}\"`);\n         error = new ResponseError(message, path, object);\n         log(`${message} ${JSON.stringify(object.data)}`);\n      } else {\n         error = object;\n      }\n      if (cb) {\n         log('going to error callback');\n         cb(error);\n      } else {\n         log('throwing error');\n         throw error;\n      }\n   };\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    global = global || {};\n    var _Base64 = global.Base64;\n    var version = \"2.6.4\";\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa && typeof global.btoa == 'function'\n        ? function(b){ return global.btoa(b) } : function(b) {\n        if (b.match(/[^\\x00-\\xFF]/)) throw new RangeError(\n            'The string contains invalid characters.'\n        );\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = function(u) {\n        return btoa(utob(String(u)));\n    };\n    var mkUriSafe = function (b64) {\n        return b64.replace(/[+\\/]/g, function(m0) {\n            return m0 == '+' ? '-' : '_';\n        }).replace(/=/g, '');\n    };\n    var encode = function(u, urisafe) {\n        return urisafe ? mkUriSafe(_encode(u)) : _encode(u);\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    var fromUint8Array;\n    if (global.Uint8Array) fromUint8Array = function(a, urisafe) {\n        // return btoa(fromCharCode.apply(null, a));\n        var b64 = '';\n        for (var i = 0, l = a.length; i < l; i += 3) {\n            var a0 = a[i], a1 = a[i+1], a2 = a[i+2];\n            var ord = a0 << 16 | a1 << 8 | a2;\n            b64 +=    b64chars.charAt( ord >>> 18)\n                +     b64chars.charAt((ord >>> 12) & 63)\n                + ( typeof a1 != 'undefined'\n                    ? b64chars.charAt((ord >>>  6) & 63) : '=')\n                + ( typeof a2 != 'undefined'\n                    ? b64chars.charAt( ord         & 63) : '=');\n        }\n        return urisafe ? mkUriSafe(b64) : b64;\n    };\n    // decoder stuff\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var _atob = global.atob && typeof global.atob == 'function'\n        ? function(a){ return global.atob(a) } : function(a){\n        return a.replace(/\\S{1,4}/g, cb_decode);\n    };\n    var atob = function(a) {\n        return _atob(String(a).replace(/[^A-Za-z0-9\\+\\/]/g, ''));\n    };\n    var _decode = function(a) { return btou(_atob(a)) };\n    var _fromURI = function(a) {\n        return String(a).replace(/[-_]/g, function(m0) {\n            return m0 == '-' ? '+' : '/'\n        }).replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    };\n    var decode = function(a){\n        return _decode(_fromURI(a));\n    };\n    var toUint8Array;\n    if (global.Uint8Array) toUint8Array = function(a) {\n        return Uint8Array.from(atob(_fromURI(a)), function(c) {\n            return c.charCodeAt(0);\n        });\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * A Gist can retrieve and modify gists.\n */\nclass Gist extends Requestable {\n   /**\n    * Create a Gist.\n    * @param {string} id - the id of the gist (not required when creating a gist)\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(id, auth, apiBase) {\n      super(auth, apiBase);\n      this.__id = id;\n   }\n\n   /**\n    * Fetch a gist.\n    * @see https://developer.github.com/v3/gists/#get-a-single-gist\n    * @param {Requestable.callback} [cb] - will receive the gist\n    * @return {Promise} - the Promise for the http request\n    */\n   read(cb) {\n      return this._request('GET', `/gists/${this.__id}`, null, cb);\n   }\n\n   /**\n    * Create a new gist.\n    * @see https://developer.github.com/v3/gists/#create-a-gist\n    * @param {Object} gist - the data for the new gist\n    * @param {Requestable.callback} [cb] - will receive the new gist upon creation\n    * @return {Promise} - the Promise for the http request\n    */\n   create(gist, cb) {\n      return this._request('POST', '/gists', gist, cb)\n         .then((response) => {\n            this.__id = response.data.id;\n            return response;\n         });\n   }\n\n   /**\n    * Delete a gist.\n    * @see https://developer.github.com/v3/gists/#delete-a-gist\n    * @param {Requestable.callback} [cb] - will receive true if the request succeeds\n    * @return {Promise} - the Promise for the http request\n    */\n   delete(cb) {\n      return this._request('DELETE', `/gists/${this.__id}`, null, cb);\n   }\n\n   /**\n    * Fork a gist.\n    * @see https://developer.github.com/v3/gists/#fork-a-gist\n    * @param {Requestable.callback} [cb] - the function that will receive the gist\n    * @return {Promise} - the Promise for the http request\n    */\n   fork(cb) {\n      return this._request('POST', `/gists/${this.__id}/forks`, null, cb);\n   }\n\n   /**\n    * Update a gist.\n    * @see https://developer.github.com/v3/gists/#edit-a-gist\n    * @param {Object} gist - the new data for the gist\n    * @param {Requestable.callback} [cb] - the function that receives the API result\n    * @return {Promise} - the Promise for the http request\n    */\n   update(gist, cb) {\n      return this._request('PATCH', `/gists/${this.__id}`, gist, cb);\n   }\n\n   /**\n    * Star a gist.\n    * @see https://developer.github.com/v3/gists/#star-a-gist\n    * @param {Requestable.callback} [cb] - will receive true if the request is successful\n    * @return {Promise} - the Promise for the http request\n    */\n   star(cb) {\n      return this._request('PUT', `/gists/${this.__id}/star`, null, cb);\n   }\n\n   /**\n    * Unstar a gist.\n    * @see https://developer.github.com/v3/gists/#unstar-a-gist\n    * @param {Requestable.callback} [cb] - will receive true if the request is successful\n    * @return {Promise} - the Promise for the http request\n    */\n   unstar(cb) {\n      return this._request('DELETE', `/gists/${this.__id}/star`, null, cb);\n   }\n\n   /**\n    * Check if a gist is starred by the user.\n    * @see https://developer.github.com/v3/gists/#check-if-a-gist-is-starred\n    * @param {Requestable.callback} [cb] - will receive true if the gist is starred and false if the gist is not starred\n    * @return {Promise} - the Promise for the http request\n    */\n   isStarred(cb) {\n      return this._request204or404(`/gists/${this.__id}/star`, null, cb);\n   }\n\n   /**\n    * List the gist's commits\n    * @see https://developer.github.com/v3/gists/#list-gist-commits\n    * @param {Requestable.callback} [cb] - will receive the array of commits\n    * @return {Promise} - the Promise for the http request\n    */\n   listCommits(cb) {\n      return this._requestAllPages(`/gists/${this.__id}/commits`, null, cb);\n   }\n\n   /**\n    * Fetch one of the gist's revision.\n    * @see https://developer.github.com/v3/gists/#get-a-specific-revision-of-a-gist\n    * @param {string} revision - the id of the revision\n    * @param {Requestable.callback} [cb] - will receive the revision\n    * @return {Promise} - the Promise for the http request\n    */\n   getRevision(revision, cb) {\n      return this._request('GET', `/gists/${this.__id}/${revision}`, null, cb);\n   }\n\n   /**\n    * List the gist's comments\n    * @see https://developer.github.com/v3/gists/comments/#list-comments-on-a-gist\n    * @param {Requestable.callback} [cb] - will receive the array of comments\n    * @return {Promise} - the promise for the http request\n    */\n   listComments(cb) {\n      return this._requestAllPages(`/gists/${this.__id}/comments`, null, cb);\n   }\n\n   /**\n    * Fetch one of the gist's comments\n    * @see https://developer.github.com/v3/gists/comments/#get-a-single-comment\n    * @param {number} comment - the id of the comment\n    * @param {Requestable.callback} [cb] - will receive the comment\n    * @return {Promise} - the Promise for the http request\n    */\n   getComment(comment, cb) {\n      return this._request('GET', `/gists/${this.__id}/comments/${comment}`, null, cb);\n   }\n\n   /**\n    * Comment on a gist\n    * @see https://developer.github.com/v3/gists/comments/#create-a-comment\n    * @param {string} comment - the comment to add\n    * @param {Requestable.callback} [cb] - the function that receives the API result\n    * @return {Promise} - the Promise for the http request\n    */\n   createComment(comment, cb) {\n      return this._request('POST', `/gists/${this.__id}/comments`, {body: comment}, cb);\n   }\n\n   /**\n    * Edit a comment on the gist\n    * @see https://developer.github.com/v3/gists/comments/#edit-a-comment\n    * @param {number} comment - the id of the comment\n    * @param {string} body - the new comment\n    * @param {Requestable.callback} [cb] - will receive the modified comment\n    * @return {Promise} - the promise for the http request\n    */\n   editComment(comment, body, cb) {\n      return this._request('PATCH', `/gists/${this.__id}/comments/${comment}`, {body: body}, cb);\n   }\n\n   /**\n    * Delete a comment on the gist.\n    * @see https://developer.github.com/v3/gists/comments/#delete-a-comment\n    * @param {number} comment - the id of the comment\n    * @param {Requestable.callback} [cb] - will receive true if the request succeeds\n    * @return {Promise} - the Promise for the http request\n    */\n   deleteComment(comment, cb) {\n      return this._request('DELETE', `/gists/${this.__id}/comments/${comment}`, null, cb);\n   }\n}\n\nmodule.exports = Gist;\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\nimport debug from 'debug';\nconst log = debug('github:user');\n\n/**\n * A User allows scoping of API requests to a particular Github user.\n */\nclass User extends Requestable {\n   /**\n    * Create a User.\n    * @param {string} [username] - the user to use for user-scoped queries\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(username, auth, apiBase) {\n      super(auth, apiBase);\n      this.__user = username;\n   }\n\n   /**\n    * Get the url for the request. (dependent on if we're requesting for the authenticated user or not)\n    * @private\n    * @param {string} endpoint - the endpoint being requested\n    * @return {string} - the resolved endpoint\n    */\n   __getScopedUrl(endpoint) {\n      if (this.__user) {\n         return endpoint ?\n            `/users/${this.__user}/${endpoint}` :\n            `/users/${this.__user}`\n            ;\n\n      } else { // eslint-disable-line\n         switch (endpoint) {\n            case '':\n               return '/user';\n\n            case 'notifications':\n            case 'gists':\n               return `/${endpoint}`;\n\n            default:\n               return `/user/${endpoint}`;\n         }\n      }\n   }\n\n   /**\n    * List the user's repositories\n    * @see https://developer.github.com/v3/repos/#list-user-repositories\n    * @param {Object} [options={}] - any options to refine the search\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   listRepos(options, cb) {\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n\n      options = this._getOptionsWithDefaults(options);\n\n      log(`Fetching repositories with options: ${JSON.stringify(options)}`);\n      return this._requestAllPages(this.__getScopedUrl('repos'), options, cb);\n   }\n\n   /**\n    * List the orgs that the user belongs to\n    * @see https://developer.github.com/v3/orgs/#list-user-organizations\n    * @param {Requestable.callback} [cb] - will receive the list of organizations\n    * @return {Promise} - the promise for the http request\n    */\n   listOrgs(cb) {\n      return this._request('GET', this.__getScopedUrl('orgs'), null, cb);\n   }\n\n   /**\n    * List followers of a user\n    * @see https://developer.github.com/v3/users/followers/#list-followers-of-a-user\n    * @param {Requestable.callback} [cb] - will receive the list of followers\n    * @return {Promise} - the promise for the http request\n    */\n   listFollowers(cb) {\n      return this._request('GET', this.__getScopedUrl('followers'), null, cb);\n   }\n\n   /**\n    * List users followed by another user\n    * @see https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user\n    * @param {Requestable.callback} [cb] - will receive the list of who a user is following\n    * @return {Promise} - the promise for the http request\n    */\n   listFollowing(cb) {\n      return this._request('GET', this.__getScopedUrl('following'), null, cb);\n   }\n\n   /**\n    * List the user's gists\n    * @see https://developer.github.com/v3/gists/#list-a-users-gists\n    * @param {Requestable.callback} [cb] - will receive the list of gists\n    * @return {Promise} - the promise for the http request\n    */\n   listGists(cb) {\n      return this._request('GET', this.__getScopedUrl('gists'), null, cb);\n   }\n\n   /**\n    * List the user's notifications\n    * @see https://developer.github.com/v3/activity/notifications/#list-your-notifications\n    * @param {Object} [options={}] - any options to refine the search\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   listNotifications(options, cb) {\n      options = options || {};\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n\n      options.since = this._dateToISO(options.since);\n      options.before = this._dateToISO(options.before);\n\n      return this._request('GET', this.__getScopedUrl('notifications'), options, cb);\n   }\n\n   /**\n    * Show the user's profile\n    * @see https://developer.github.com/v3/users/#get-a-single-user\n    * @param {Requestable.callback} [cb] - will receive the user's information\n    * @return {Promise} - the promise for the http request\n    */\n   getProfile(cb) {\n      return this._request('GET', this.__getScopedUrl(''), null, cb);\n   }\n\n   /**\n    * Gets the list of starred repositories for the user\n    * @see https://developer.github.com/v3/activity/starring/#list-repositories-being-starred\n    * @param {Requestable.callback} [cb] - will receive the list of starred repositories\n    * @return {Promise} - the promise for the http request\n    */\n   listStarredRepos(cb) {\n      let requestOptions = this._getOptionsWithDefaults();\n      return this._requestAllPages(this.__getScopedUrl('starred'), requestOptions, cb);\n   }\n\n   /**\n    * Gets the list of starred gists for the user\n    * @see https://developer.github.com/v3/gists/#list-starred-gists\n    * @param {Object} [options={}] - any options to refine the search\n    * @param {Requestable.callback} [cb] - will receive the list of gists\n    * @return {Promise} - the promise for the http request\n    */\n   listStarredGists(options, cb) {\n      options = options || {};\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n      options.since = this._dateToISO(options.since);\n      return this._request('GET', '/gists/starred', options, cb);\n   }\n\n   /**\n    * List email addresses for a user\n    * @see https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user\n    * @param {Requestable.callback} [cb] - will receive the list of emails\n    * @return {Promise} - the promise for the http request\n    */\n   getEmails(cb) {\n      return this._request('GET', '/user/emails', null, cb);\n   }\n\n   /**\n    * Have the authenticated user follow this user\n    * @see https://developer.github.com/v3/users/followers/#follow-a-user\n    * @param {string} username - the user to follow\n    * @param {Requestable.callback} [cb] - will receive true if the request succeeds\n    * @return {Promise} - the promise for the http request\n    */\n   follow(username, cb) {\n      return this._request('PUT', `/user/following/${username}`, null, cb);\n   }\n\n   /**\n    * Have the currently authenticated user unfollow this user\n    * @see https://developer.github.com/v3/users/followers/#follow-a-user\n    * @param {string} username - the user to unfollow\n    * @param {Requestable.callback} [cb] - receives true if the request succeeds\n    * @return {Promise} - the promise for the http request\n    */\n   unfollow(username, cb) {\n      return this._request('DELETE', `/user/following/${username}`, null, cb);\n   }\n\n   /**\n    * Create a new repository for the currently authenticated user\n    * @see https://developer.github.com/v3/repos/#create\n    * @param {object} options - the repository definition\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   createRepo(options, cb) {\n      return this._request('POST', '/user/repos', options, cb);\n   }\n}\n\nmodule.exports = User;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * Issue wraps the functionality to get issues for repositories\n */\nclass Issue extends Requestable {\n   /**\n    * Create a new Issue\n    * @param {string} repository - the full name of the repository (`:user/:repo`) to get issues for\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(repository, auth, apiBase) {\n      super(auth, apiBase);\n      this.__repository = repository;\n   }\n\n   /**\n    * Create a new issue\n    * @see https://developer.github.com/v3/issues/#create-an-issue\n    * @param {Object} issueData - the issue to create\n    * @param {Requestable.callback} [cb] - will receive the created issue\n    * @return {Promise} - the promise for the http request\n    */\n   createIssue(issueData, cb) {\n      return this._request('POST', `/repos/${this.__repository}/issues`, issueData, cb);\n   }\n\n   /**\n    * List the issues for the repository\n    * @see https://developer.github.com/v3/issues/#list-issues-for-a-repository\n    * @param {Object} options - filtering options\n    * @param {Requestable.callback} [cb] - will receive the array of issues\n    * @return {Promise} - the promise for the http request\n    */\n   listIssues(options, cb) {\n      return this._requestAllPages(`/repos/${this.__repository}/issues`, options, cb);\n   }\n\n   /**\n    * List the events for an issue\n    * @see https://developer.github.com/v3/issues/events/#list-events-for-an-issue\n    * @param {number} issue - the issue to get events for\n    * @param {Requestable.callback} [cb] - will receive the list of events\n    * @return {Promise} - the promise for the http request\n    */\n   listIssueEvents(issue, cb) {\n      return this._request('GET', `/repos/${this.__repository}/issues/${issue}/events`, null, cb);\n   }\n\n   /**\n    * List comments on an issue\n    * @see https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue\n    * @param {number} issue - the id of the issue to get comments from\n    * @param {Requestable.callback} [cb] - will receive the comments\n    * @return {Promise} - the promise for the http request\n    */\n   listIssueComments(issue, cb) {\n      return this._request('GET', `/repos/${this.__repository}/issues/${issue}/comments`, null, cb);\n   }\n\n   /**\n    * Get a single comment on an issue\n    * @see https://developer.github.com/v3/issues/comments/#get-a-single-comment\n    * @param {number} id - the comment id to get\n    * @param {Requestable.callback} [cb] - will receive the comment\n    * @return {Promise} - the promise for the http request\n    */\n   getIssueComment(id, cb) {\n      return this._request('GET', `/repos/${this.__repository}/issues/comments/${id}`, null, cb);\n   }\n\n   /**\n    * Comment on an issue\n    * @see https://developer.github.com/v3/issues/comments/#create-a-comment\n    * @param {number} issue - the id of the issue to comment on\n    * @param {string} comment - the comment to add\n    * @param {Requestable.callback} [cb] - will receive the created comment\n    * @return {Promise} - the promise for the http request\n    */\n   createIssueComment(issue, comment, cb) {\n      return this._request('POST', `/repos/${this.__repository}/issues/${issue}/comments`, {body: comment}, cb);\n   }\n\n   /**\n    * Edit a comment on an issue\n    * @see https://developer.github.com/v3/issues/comments/#edit-a-comment\n    * @param {number} id - the comment id to edit\n    * @param {string} comment - the comment to edit\n    * @param {Requestable.callback} [cb] - will receive the edited comment\n    * @return {Promise} - the promise for the http request\n    */\n   editIssueComment(id, comment, cb) {\n      return this._request('PATCH', `/repos/${this.__repository}/issues/comments/${id}`, {body: comment}, cb);\n   }\n\n   /**\n    * Delete a comment on an issue\n    * @see https://developer.github.com/v3/issues/comments/#delete-a-comment\n    * @param {number} id - the comment id to delete\n    * @param {Requestable.callback} [cb] - will receive true if the request is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteIssueComment(id, cb) {\n      return this._request('DELETE', `/repos/${this.__repository}/issues/comments/${id}`, null, cb);\n   }\n\n   /**\n    * Edit an issue\n    * @see https://developer.github.com/v3/issues/#edit-an-issue\n    * @param {number} issue - the issue number to edit\n    * @param {Object} issueData - the new issue data\n    * @param {Requestable.callback} [cb] - will receive the modified issue\n    * @return {Promise} - the promise for the http request\n    */\n   editIssue(issue, issueData, cb) {\n      return this._request('PATCH', `/repos/${this.__repository}/issues/${issue}`, issueData, cb);\n   }\n\n   /**\n    * Get a particular issue\n    * @see https://developer.github.com/v3/issues/#get-a-single-issue\n    * @param {number} issue - the issue number to fetch\n    * @param {Requestable.callback} [cb] - will receive the issue\n    * @return {Promise} - the promise for the http request\n    */\n   getIssue(issue, cb) {\n      return this._request('GET', `/repos/${this.__repository}/issues/${issue}`, null, cb);\n   }\n\n   /**\n    * List the milestones for the repository\n    * @see https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository\n    * @param {Object} options - filtering options\n    * @param {Requestable.callback} [cb] - will receive the array of milestones\n    * @return {Promise} - the promise for the http request\n    */\n   listMilestones(options, cb) {\n      return this._request('GET', `/repos/${this.__repository}/milestones`, options, cb);\n   }\n\n   /**\n    * Get a milestone\n    * @see https://developer.github.com/v3/issues/milestones/#get-a-single-milestone\n    * @param {string} milestone - the id of the milestone to fetch\n    * @param {Requestable.callback} [cb] - will receive the milestone\n    * @return {Promise} - the promise for the http request\n    */\n   getMilestone(milestone, cb) {\n      return this._request('GET', `/repos/${this.__repository}/milestones/${milestone}`, null, cb);\n   }\n\n   /**\n    * Create a new milestone\n    * @see https://developer.github.com/v3/issues/milestones/#create-a-milestone\n    * @param {Object} milestoneData - the milestone definition\n    * @param {Requestable.callback} [cb] - will receive the milestone\n    * @return {Promise} - the promise for the http request\n    */\n   createMilestone(milestoneData, cb) {\n      return this._request('POST', `/repos/${this.__repository}/milestones`, milestoneData, cb);\n   }\n\n   /**\n    * Edit a milestone\n    * @see https://developer.github.com/v3/issues/milestones/#update-a-milestone\n    * @param {string} milestone - the id of the milestone to edit\n    * @param {Object} milestoneData - the updates to make to the milestone\n    * @param {Requestable.callback} [cb] - will receive the updated milestone\n    * @return {Promise} - the promise for the http request\n    */\n   editMilestone(milestone, milestoneData, cb) {\n      return this._request('PATCH', `/repos/${this.__repository}/milestones/${milestone}`, milestoneData, cb);\n   }\n\n   /**\n    * Delete a milestone (this is distinct from closing a milestone)\n    * @see https://developer.github.com/v3/issues/milestones/#delete-a-milestone\n    * @param {string} milestone - the id of the milestone to delete\n    * @param {Requestable.callback} [cb] - will receive the status\n    * @return {Promise} - the promise for the http request\n    */\n   deleteMilestone(milestone, cb) {\n      return this._request('DELETE', `/repos/${this.__repository}/milestones/${milestone}`, null, cb);\n   }\n\n   /**\n    * Create a new label\n    * @see https://developer.github.com/v3/issues/labels/#create-a-label\n    * @param {Object} labelData - the label definition\n    * @param {Requestable.callback} [cb] - will receive the object representing the label\n    * @return {Promise} - the promise for the http request\n    */\n   createLabel(labelData, cb) {\n      return this._request('POST', `/repos/${this.__repository}/labels`, labelData, cb);\n   }\n\n  /**\n   * List the labels for the repository\n   * @see https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository\n   * @param {Object} options - filtering options\n   * @param {Requestable.callback} [cb] - will receive the array of labels\n   * @return {Promise} - the promise for the http request\n   */\n   listLabels(options, cb) {\n      return this._request('GET', `/repos/${this.__repository}/labels`, options, cb);\n   }\n\n  /**\n   * Get a label\n   * @see https://developer.github.com/v3/issues/labels/#get-a-single-label\n   * @param {string} label - the name of the label to fetch\n   * @param {Requestable.callback} [cb] - will receive the label\n   * @return {Promise} - the promise for the http request\n   */\n   getLabel(label, cb) {\n      return this._request('GET', `/repos/${this.__repository}/labels/${label}`, null, cb);\n   }\n\n  /**\n   * Edit a label\n   * @see https://developer.github.com/v3/issues/labels/#update-a-label\n   * @param {string} label - the name of the label to edit\n   * @param {Object} labelData - the updates to make to the label\n   * @param {Requestable.callback} [cb] - will receive the updated label\n   * @return {Promise} - the promise for the http request\n   */\n   editLabel(label, labelData, cb) {\n      return this._request('PATCH', `/repos/${this.__repository}/labels/${label}`, labelData, cb);\n   }\n\n  /**\n   * Delete a label\n   * @see https://developer.github.com/v3/issues/labels/#delete-a-label\n   * @param {string} label - the name of the label to delete\n   * @param {Requestable.callback} [cb] - will receive the status\n   * @return {Promise} - the promise for the http request\n   */\n   deleteLabel(label, cb) {\n      return this._request('DELETE', `/repos/${this.__repository}/labels/${label}`, null, cb);\n   }\n}\n\nmodule.exports = Issue;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\nimport debug from 'debug';\nconst log = debug('github:search');\n\n/**\n * Wrap the Search API\n */\nclass Search extends Requestable {\n   /**\n    * Create a Search\n    * @param {Object} defaults - defaults for the search\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(defaults, auth, apiBase) {\n      super(auth, apiBase);\n      this.__defaults = this._getOptionsWithDefaults(defaults);\n   }\n\n   /**\n    * Available search options\n    * @see https://developer.github.com/v3/search/#parameters\n    * @typedef {Object} Search.Params\n    * @param {string} q - the query to make\n    * @param {string} sort - the sort field, one of `stars`, `forks`, or `updated`.\n    *                      Default is [best match](https://developer.github.com/v3/search/#ranking-search-results)\n    * @param {string} order - the ordering, either `asc` or `desc`\n    */\n   /**\n    * Perform a search on the GitHub API\n    * @private\n    * @param {string} path - the scope of the search\n    * @param {Search.Params} [withOptions] - additional parameters for the search\n    * @param {Requestable.callback} [cb] - will receive the results of the search\n    * @return {Promise} - the promise for the http request\n    */\n   _search(path, withOptions = {}, cb = undefined) {\n      let requestOptions = {};\n      Object.keys(this.__defaults).forEach((prop) => {\n         requestOptions[prop] = this.__defaults[prop];\n      });\n      Object.keys(withOptions).forEach((prop) => {\n         requestOptions[prop] = withOptions[prop];\n      });\n\n      log(`searching ${path} with options:`, requestOptions);\n      return this._requestAllPages(`/search/${path}`, requestOptions, cb);\n   }\n\n   /**\n    * Search for repositories\n    * @see https://developer.github.com/v3/search/#search-repositories\n    * @param {Search.Params} [options] - additional parameters for the search\n    * @param {Requestable.callback} [cb] - will receive the results of the search\n    * @return {Promise} - the promise for the http request\n    */\n   forRepositories(options, cb) {\n      return this._search('repositories', options, cb);\n   }\n\n   /**\n    * Search for code\n    * @see https://developer.github.com/v3/search/#search-code\n    * @param {Search.Params} [options] - additional parameters for the search\n    * @param {Requestable.callback} [cb] - will receive the results of the search\n    * @return {Promise} - the promise for the http request\n    */\n   forCode(options, cb) {\n      return this._search('code', options, cb);\n   }\n\n   /**\n    * Search for issues\n    * @see https://developer.github.com/v3/search/#search-issues\n    * @param {Search.Params} [options] - additional parameters for the search\n    * @param {Requestable.callback} [cb] - will receive the results of the search\n    * @return {Promise} - the promise for the http request\n    */\n   forIssues(options, cb) {\n      return this._search('issues', options, cb);\n   }\n\n   /**\n    * Search for users\n    * @see https://developer.github.com/v3/search/#search-users\n    * @param {Search.Params} [options] - additional parameters for the search\n    * @param {Requestable.callback} [cb] - will receive the results of the search\n    * @return {Promise} - the promise for the http request\n    */\n   forUsers(options, cb) {\n      return this._search('users', options, cb);\n   }\n}\n\nmodule.exports = Search;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * RateLimit allows users to query their rate-limit status\n */\nclass RateLimit extends Requestable {\n   /**\n    * construct a RateLimit\n    * @param {Requestable.auth} auth - the credentials to authenticate to GitHub\n    * @param {string} [apiBase] - the base Github API URL\n    * @return {Promise} - the promise for the http request\n    */\n   constructor(auth, apiBase) {\n      super(auth, apiBase);\n   }\n\n   /**\n    * Query the current rate limit\n    * @see https://developer.github.com/v3/rate_limit/\n    * @param {Requestable.callback} [cb] - will receive the rate-limit data\n    * @return {Promise} - the promise for the http request\n    */\n   getRateLimit(cb) {\n      return this._request('GET', '/rate_limit', null, cb);\n   }\n}\n\nmodule.exports = RateLimit;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\nimport Utf8 from 'utf8';\nimport {\n   Base64,\n} from 'js-base64';\nimport debug from 'debug';\nconst log = debug('github:repository');\n\n/**\n * Repository encapsulates the functionality to create, query, and modify files.\n */\nclass Repository extends Requestable {\n   /**\n    * Create a Repository.\n    * @param {string} fullname - the full name of the repository\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(fullname, auth, apiBase) {\n      super(auth, apiBase);\n      this.__fullname = fullname;\n      this.__currentTree = {\n         branch: null,\n         sha: null,\n      };\n   }\n\n   /**\n    * Get a reference\n    * @see https://developer.github.com/v3/git/refs/#get-a-reference\n    * @param {string} ref - the reference to get\n    * @param {Requestable.callback} [cb] - will receive the reference's refSpec or a list of refSpecs that match `ref`\n    * @return {Promise} - the promise for the http request\n    */\n   getRef(ref, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/git/refs/${ref}`, null, cb);\n   }\n\n   /**\n    * Create a reference\n    * @see https://developer.github.com/v3/git/refs/#create-a-reference\n    * @param {Object} options - the object describing the ref\n    * @param {Requestable.callback} [cb] - will receive the ref\n    * @return {Promise} - the promise for the http request\n    */\n   createRef(options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/git/refs`, options, cb);\n   }\n\n   /**\n    * Delete a reference\n    * @see https://developer.github.com/v3/git/refs/#delete-a-reference\n    * @param {string} ref - the name of the ref to delte\n    * @param {Requestable.callback} [cb] - will receive true if the request is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteRef(ref, cb) {\n      return this._request('DELETE', `/repos/${this.__fullname}/git/refs/${ref}`, null, cb);\n   }\n\n   /**\n    * Delete a repository\n    * @see https://developer.github.com/v3/repos/#delete-a-repository\n    * @param {Requestable.callback} [cb] - will receive true if the request is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteRepo(cb) {\n      return this._request('DELETE', `/repos/${this.__fullname}`, null, cb);\n   }\n\n   /**\n    * List the tags on a repository\n    * @see https://developer.github.com/v3/repos/#list-tags\n    * @param {Requestable.callback} [cb] - will receive the tag data\n    * @return {Promise} - the promise for the http request\n    */\n   listTags(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/tags`, null, cb);\n   }\n\n   /**\n    * List the open pull requests on the repository\n    * @see https://developer.github.com/v3/pulls/#list-pull-requests\n    * @param {Object} options - options to filter the search\n    * @param {Requestable.callback} [cb] - will receive the list of PRs\n    * @return {Promise} - the promise for the http request\n    */\n   listPullRequests(options, cb) {\n      options = options || {};\n      return this._request('GET', `/repos/${this.__fullname}/pulls`, options, cb);\n   }\n\n   /**\n    * Get information about a specific pull request\n    * @see https://developer.github.com/v3/pulls/#get-a-single-pull-request\n    * @param {number} number - the PR you wish to fetch\n    * @param {Requestable.callback} [cb] - will receive the PR from the API\n    * @return {Promise} - the promise for the http request\n    */\n   getPullRequest(number, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/pulls/${number}`, null, cb);\n   }\n\n   /**\n    * List the files of a specific pull request\n    * @see https://developer.github.com/v3/pulls/#list-pull-requests-files\n    * @param {number|string} number - the PR you wish to fetch\n    * @param {Requestable.callback} [cb] - will receive the list of files from the API\n    * @return {Promise} - the promise for the http request\n    */\n   listPullRequestFiles(number, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/pulls/${number}/files`, null, cb);\n   }\n\n   /**\n    * Compare two branches/commits/repositories\n    * @see https://developer.github.com/v3/repos/commits/#compare-two-commits\n    * @param {string} base - the base commit\n    * @param {string} head - the head commit\n    * @param {Requestable.callback} cb - will receive the comparison\n    * @return {Promise} - the promise for the http request\n    */\n   compareBranches(base, head, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/compare/${base}...${head}`, null, cb);\n   }\n\n   /**\n    * List all the branches for the repository\n    * @see https://developer.github.com/v3/repos/#list-branches\n    * @param {Requestable.callback} cb - will receive the list of branches\n    * @return {Promise} - the promise for the http request\n    */\n   listBranches(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/branches`, null, cb);\n   }\n\n   /**\n    * Get a raw blob from the repository\n    * @see https://developer.github.com/v3/git/blobs/#get-a-blob\n    * @param {string} sha - the sha of the blob to fetch\n    * @param {Requestable.callback} cb - will receive the blob from the API\n    * @return {Promise} - the promise for the http request\n    */\n   getBlob(sha, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/git/blobs/${sha}`, null, cb, 'raw');\n   }\n\n   /**\n    * Get a single branch\n    * @see https://developer.github.com/v3/repos/branches/#get-branch\n    * @param {string} branch - the name of the branch to fetch\n    * @param {Requestable.callback} cb - will receive the branch from the API\n    * @returns {Promise} - the promise for the http request\n    */\n   getBranch(branch, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/branches/${branch}`, null, cb);\n   }\n\n   /**\n    * Get a commit from the repository\n    * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit\n    * @param {string} sha - the sha for the commit to fetch\n    * @param {Requestable.callback} cb - will receive the commit data\n    * @return {Promise} - the promise for the http request\n    */\n   getCommit(sha, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/git/commits/${sha}`, null, cb);\n   }\n\n   /**\n    * List the commits on a repository, optionally filtering by path, author or time range\n    * @see https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository\n    * @param {Object} [options] - the filtering options for commits\n    * @param {string} [options.sha] - the SHA or branch to start from\n    * @param {string} [options.path] - the path to search on\n    * @param {string} [options.author] - the commit author\n    * @param {(Date|string)} [options.since] - only commits after this date will be returned\n    * @param {(Date|string)} [options.until] - only commits before this date will be returned\n    * @param {Requestable.callback} cb - will receive the list of commits found matching the criteria\n    * @return {Promise} - the promise for the http request\n    */\n   listCommits(options, cb) {\n      options = options || {};\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n      options.since = this._dateToISO(options.since);\n      options.until = this._dateToISO(options.until);\n\n      return this._request('GET', `/repos/${this.__fullname}/commits`, options, cb);\n   }\n\n   /**\n    * List the commits on a pull request\n    * @see https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository\n    * @param {number|string} number - the number of the pull request to list the commits\n    * @param {Object} [options] - the filtering options for commits\n    * @param {Requestable.callback} [cb] - will receive the commits information\n    * @return {Promise} - the promise for the http request\n    */\n   listCommitsOnPR(number, options, cb) {\n      options = options || {};\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n      return this._request('GET', `/repos/${this.__fullname}/pulls/${number}/commits`, options, cb);\n   }\n\n    /**\n     * Gets a single commit information for a repository\n     * @see https://developer.github.com/v3/repos/commits/#get-a-single-commit\n     * @param {string} ref - the reference for the commit-ish\n     * @param {Requestable.callback} cb - will receive the commit information\n     * @return {Promise} - the promise for the http request\n     */\n   getSingleCommit(ref, cb) {\n      ref = ref || '';\n      return this._request('GET', `/repos/${this.__fullname}/commits/${ref}`, null, cb);\n   }\n\n   /**\n    * Get tha sha for a particular object in the repository. This is a convenience function\n    * @see https://developer.github.com/v3/repos/contents/#get-contents\n    * @param {string} [branch] - the branch to look in, or the repository's default branch if omitted\n    * @param {string} path - the path of the file or directory\n    * @param {Requestable.callback} cb - will receive a description of the requested object, including a `SHA` property\n    * @return {Promise} - the promise for the http request\n    */\n   getSha(branch, path, cb) {\n      branch = branch ? `?ref=${branch}` : '';\n      return this._request('GET', `/repos/${this.__fullname}/contents/${path}${branch}`, null, cb);\n   }\n\n   /**\n    * List the commit statuses for a particular sha, branch, or tag\n    * @see https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref\n    * @param {string} sha - the sha, branch, or tag to get statuses for\n    * @param {Requestable.callback} cb - will receive the list of statuses\n    * @return {Promise} - the promise for the http request\n    */\n   listStatuses(sha, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/commits/${sha}/statuses`, null, cb);\n   }\n\n   /**\n    * Get the combined view of commit statuses for a particular sha, branch, or tag\n    * @see https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n    * @param {string} sha - the sha, branch, or tag to get the combined status for\n    * @param {Requestable.callback} cb - will receive the combined status\n    * @returns {Promise} - the promise for the http request\n    */\n   getCombinedStatus(sha, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/commits/${sha}/status`, null, cb);\n   }\n\n   /**\n    * Get a description of a git tree\n    * @see https://developer.github.com/v3/git/trees/#get-a-tree\n    * @param {string} treeSHA - the SHA of the tree to fetch\n    * @param {Requestable.callback} cb - will receive the callback data\n    * @return {Promise} - the promise for the http request\n    */\n   getTree(treeSHA, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/git/trees/${treeSHA}`, null, cb);\n   }\n\n   /**\n    * Create a blob\n    * @see https://developer.github.com/v3/git/blobs/#create-a-blob\n    * @param {(string|Buffer|Blob)} content - the content to add to the repository\n    * @param {Requestable.callback} cb - will receive the details of the created blob\n    * @return {Promise} - the promise for the http request\n    */\n   createBlob(content, cb) {\n      let postBody = this._getContentObject(content);\n\n      log('sending content', postBody);\n      return this._request('POST', `/repos/${this.__fullname}/git/blobs`, postBody, cb);\n   }\n\n   /**\n    * Get the object that represents the provided content\n    * @param {string|Buffer|Blob} content - the content to send to the server\n    * @return {Object} the representation of `content` for the GitHub API\n    */\n   _getContentObject(content) {\n      if (typeof content === 'string') {\n         log('contet is a string');\n         return {\n            content: Utf8.encode(content),\n            encoding: 'utf-8',\n         };\n\n      } else if (typeof Buffer !== 'undefined' && content instanceof Buffer) {\n         log('We appear to be in Node');\n         return {\n            content: content.toString('base64'),\n            encoding: 'base64',\n         };\n\n      } else if (typeof Blob !== 'undefined' && content instanceof Blob) {\n         log('We appear to be in the browser');\n         return {\n            content: Base64.encode(content),\n            encoding: 'base64',\n         };\n\n      } else { // eslint-disable-line\n         log(`Not sure what this content is: ${typeof content}, ${JSON.stringify(content)}`);\n         throw new Error('Unknown content passed to postBlob. Must be string or Buffer (node) or Blob (web)');\n      }\n   }\n\n   /**\n    * Update a tree in Git\n    * @see https://developer.github.com/v3/git/trees/#create-a-tree\n    * @param {string} baseTreeSHA - the SHA of the tree to update\n    * @param {string} path - the path for the new file\n    * @param {string} blobSHA - the SHA for the blob to put at `path`\n    * @param {Requestable.callback} cb - will receive the new tree that is created\n    * @return {Promise} - the promise for the http request\n    * @deprecated use {@link Repository#createTree} instead\n    */\n   updateTree(baseTreeSHA, path, blobSHA, cb) {\n      let newTree = {\n         base_tree: baseTreeSHA, // eslint-disable-line\n         tree: [{\n            path: path,\n            sha: blobSHA,\n            mode: '100644',\n            type: 'blob',\n         }],\n      };\n\n      return this._request('POST', `/repos/${this.__fullname}/git/trees`, newTree, cb);\n   }\n\n   /**\n    * Create a new tree in git\n    * @see https://developer.github.com/v3/git/trees/#create-a-tree\n    * @param {Object} tree - the tree to create\n    * @param {string} baseSHA - the root sha of the tree\n    * @param {Requestable.callback} cb - will receive the new tree that is created\n    * @return {Promise} - the promise for the http request\n    */\n   createTree(tree, baseSHA, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/git/trees`, {\n         tree,\n         base_tree: baseSHA, // eslint-disable-line camelcase\n      }, cb);\n   }\n\n   /**\n    * Add a commit to the repository\n    * @see https://developer.github.com/v3/git/commits/#create-a-commit\n    * @param {string} parent - the SHA of the parent commit\n    * @param {string} tree - the SHA of the tree for this commit\n    * @param {string} message - the commit message\n    * @param {Object} [options] - commit options\n    * @param {Object} [options.author] - the author of the commit\n    * @param {Object} [options.commiter] - the committer\n    * @param {Requestable.callback} cb - will receive the commit that is created\n    * @return {Promise} - the promise for the http request\n    */\n   commit(parent, tree, message, options, cb) {\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n\n      let data = {\n         message,\n         tree,\n         parents: [parent],\n      };\n\n      data = Object.assign({}, options, data);\n\n      return this._request('POST', `/repos/${this.__fullname}/git/commits`, data, cb)\n         .then((response) => {\n            this.__currentTree.sha = response.data.sha; // Update latest commit\n            return response;\n         });\n   }\n\n   /**\n    * Update a ref\n    * @see https://developer.github.com/v3/git/refs/#update-a-reference\n    * @param {string} ref - the ref to update\n    * @param {string} commitSHA - the SHA to point the reference to\n    * @param {boolean} force - indicates whether to force or ensure a fast-forward update\n    * @param {Requestable.callback} cb - will receive the updated ref back\n    * @return {Promise} - the promise for the http request\n    */\n   updateHead(ref, commitSHA, force, cb) {\n      return this._request('PATCH', `/repos/${this.__fullname}/git/refs/${ref}`, {\n         sha: commitSHA,\n         force: force,\n      }, cb);\n   }\n\n   /**\n    * Update commit status\n    * @see https://developer.github.com/v3/repos/statuses/\n    * @param {string} commitSHA - the SHA of the commit that should be updated\n    * @param {object} options - Commit status parameters\n    * @param {string} options.state - The state of the status. Can be one of: pending, success, error, or failure.\n    * @param {string} [options.target_url] - The target URL to associate with this status.\n    * @param {string} [options.description] - A short description of the status.\n    * @param {string} [options.context] - A string label to differentiate this status among CI systems.\n    * @param {Requestable.callback} cb - will receive the updated commit back\n    * @return {Promise} - the promise for the http request\n    */\n   updateStatus(commitSHA, options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/statuses/${commitSHA}`, options, cb);\n   }\n\n   /**\n    * Update repository information\n    * @see https://developer.github.com/v3/repos/#edit\n    * @param {object} options - New parameters that will be set to the repository\n    * @param {string} options.name - Name of the repository\n    * @param {string} [options.description] - A short description of the repository\n    * @param {string} [options.homepage] - A URL with more information about the repository\n    * @param {boolean} [options.private] - Either true to make the repository private, or false to make it public.\n    * @param {boolean} [options.has_issues] - Either true to enable issues for this repository, false to disable them.\n    * @param {boolean} [options.has_wiki] - Either true to enable the wiki for this repository, false to disable it.\n    * @param {boolean} [options.has_downloads] - Either true to enable downloads, false to disable them.\n    * @param {string} [options.default_branch] - Updates the default branch for this repository.\n    * @param {Requestable.callback} cb - will receive the updated repository back\n    * @return {Promise} - the promise for the http request\n    */\n   updateRepository(options, cb) {\n      return this._request('PATCH', `/repos/${this.__fullname}`, options, cb);\n   }\n\n  /**\n    * Get information about the repository\n    * @see https://developer.github.com/v3/repos/#get\n    * @param {Requestable.callback} cb - will receive the information about the repository\n    * @return {Promise} - the promise for the http request\n    */\n   getDetails(cb) {\n      return this._request('GET', `/repos/${this.__fullname}`, null, cb);\n   }\n\n   /**\n    * List the contributors to the repository\n    * @see https://developer.github.com/v3/repos/#list-contributors\n    * @param {Requestable.callback} cb - will receive the list of contributors\n    * @return {Promise} - the promise for the http request\n    */\n   getContributors(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/contributors`, null, cb);\n   }\n\n   /**\n    * List the contributor stats to the repository\n    * @see https://developer.github.com/v3/repos/#list-contributors\n    * @param {Requestable.callback} cb - will receive the list of contributors\n    * @return {Promise} - the promise for the http request\n    */\n   getContributorStats(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/stats/contributors`, null, cb);\n   }\n\n   /**\n    * List the users who are collaborators on the repository. The currently authenticated user must have\n    * push access to use this method\n    * @see https://developer.github.com/v3/repos/collaborators/#list-collaborators\n    * @param {Requestable.callback} cb - will receive the list of collaborators\n    * @return {Promise} - the promise for the http request\n    */\n   getCollaborators(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/collaborators`, null, cb);\n   }\n\n   /**\n    * Check if a user is a collaborator on the repository\n    * @see https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator\n    * @param {string} username - the user to check\n    * @param {Requestable.callback} cb - will receive true if the user is a collaborator and false if they are not\n    * @return {Promise} - the promise for the http request {Boolean} [description]\n    */\n   isCollaborator(username, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/collaborators/${username}`, null, cb);\n   }\n\n   /**\n    * Get the contents of a repository\n    * @see https://developer.github.com/v3/repos/contents/#get-contents\n    * @param {string} ref - the ref to check\n    * @param {string} path - the path containing the content to fetch\n    * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format\n    * @param {Requestable.callback} cb - will receive the fetched data\n    * @return {Promise} - the promise for the http request\n    */\n   getContents(ref, path, raw, cb) {\n      path = path ? `${encodeURI(path)}` : '';\n      return this._request('GET', `/repos/${this.__fullname}/contents/${path}`, {\n         ref,\n      }, cb, raw);\n   }\n\n   /**\n    * Get the README of a repository\n    * @see https://developer.github.com/v3/repos/contents/#get-the-readme\n    * @param {string} ref - the ref to check\n    * @param {boolean} raw - `true` if the results should be returned raw instead of GitHub's normalized format\n    * @param {Requestable.callback} cb - will receive the fetched data\n    * @return {Promise} - the promise for the http request\n    */\n   getReadme(ref, raw, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/readme`, {\n         ref,\n      }, cb, raw);\n   }\n\n   /**\n    * Fork a repository\n    * @see https://developer.github.com/v3/repos/forks/#create-a-fork\n    * @param {Requestable.callback} cb - will receive the information about the newly created fork\n    * @return {Promise} - the promise for the http request\n    */\n   fork(cb) {\n      return this._request('POST', `/repos/${this.__fullname}/forks`, null, cb);\n   }\n\n   /**\n    * Fork a repository to an organization\n    * @see https://developer.github.com/v3/repos/forks/#create-a-fork\n    * @param {String} org - organization where you'd like to create the fork.\n    * @param {Requestable.callback} cb - will receive the information about the newly created fork\n    * @return {Promise} - the promise for the http request\n    *\n    */\n   forkToOrg(org, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/forks?organization=${org}`, null, cb);\n   }\n\n   /**\n    * List a repository's forks\n    * @see https://developer.github.com/v3/repos/forks/#list-forks\n    * @param {Requestable.callback} cb - will receive the list of repositories forked from this one\n    * @return {Promise} - the promise for the http request\n    */\n   listForks(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/forks`, null, cb);\n   }\n\n   /**\n    * Create a new branch from an existing branch.\n    * @param {string} [oldBranch=master] - the name of the existing branch\n    * @param {string} newBranch - the name of the new branch\n    * @param {Requestable.callback} cb - will receive the commit data for the head of the new branch\n    * @return {Promise} - the promise for the http request\n    */\n   createBranch(oldBranch, newBranch, cb) {\n      if (typeof newBranch === 'function') {\n         cb = newBranch;\n         newBranch = oldBranch;\n         oldBranch = 'master';\n      }\n\n      return this.getRef(`heads/${oldBranch}`)\n         .then((response) => {\n            let sha = response.data.object.sha;\n            return this.createRef({\n               sha,\n               ref: `refs/heads/${newBranch}`,\n            }, cb);\n         });\n   }\n\n   /**\n    * Create a new pull request\n    * @see https://developer.github.com/v3/pulls/#create-a-pull-request\n    * @param {Object} options - the pull request description\n    * @param {Requestable.callback} cb - will receive the new pull request\n    * @return {Promise} - the promise for the http request\n    */\n   createPullRequest(options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/pulls`, options, cb);\n   }\n\n   /**\n    * Update a pull request\n    * @see https://developer.github.com/v3/pulls/#update-a-pull-request\n    * @param {number|string} number - the number of the pull request to update\n    * @param {Object} options - the pull request description\n    * @param {Requestable.callback} [cb] - will receive the pull request information\n    * @return {Promise} - the promise for the http request\n    */\n   updatePullRequest(number, options, cb) {\n      return this._request('PATCH', `/repos/${this.__fullname}/pulls/${number}`, options, cb);\n   }\n\n   /**\n    * List the hooks for the repository\n    * @see https://developer.github.com/v3/repos/hooks/#list-hooks\n    * @param {Requestable.callback} cb - will receive the list of hooks\n    * @return {Promise} - the promise for the http request\n    */\n   listHooks(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/hooks`, null, cb);\n   }\n\n   /**\n    * Get a hook for the repository\n    * @see https://developer.github.com/v3/repos/hooks/#get-single-hook\n    * @param {number} id - the id of the webook\n    * @param {Requestable.callback} cb - will receive the details of the webook\n    * @return {Promise} - the promise for the http request\n    */\n   getHook(id, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/hooks/${id}`, null, cb);\n   }\n\n   /**\n    * Add a new hook to the repository\n    * @see https://developer.github.com/v3/repos/hooks/#create-a-hook\n    * @param {Object} options - the configuration describing the new hook\n    * @param {Requestable.callback} cb - will receive the new webhook\n    * @return {Promise} - the promise for the http request\n    */\n   createHook(options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/hooks`, options, cb);\n   }\n\n   /**\n    * Edit an existing webhook\n    * @see https://developer.github.com/v3/repos/hooks/#edit-a-hook\n    * @param {number} id - the id of the webhook\n    * @param {Object} options - the new description of the webhook\n    * @param {Requestable.callback} cb - will receive the updated webhook\n    * @return {Promise} - the promise for the http request\n    */\n   updateHook(id, options, cb) {\n      return this._request('PATCH', `/repos/${this.__fullname}/hooks/${id}`, options, cb);\n   }\n\n   /**\n    * Delete a webhook\n    * @see https://developer.github.com/v3/repos/hooks/#delete-a-hook\n    * @param {number} id - the id of the webhook to be deleted\n    * @param {Requestable.callback} cb - will receive true if the call is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteHook(id, cb) {\n      return this._request('DELETE', `/repos/${this.__fullname}/hooks/${id}`, null, cb);\n   }\n\n   /**\n    * List the deploy keys for the repository\n    * @see https://developer.github.com/v3/repos/keys/#list-deploy-keys\n    * @param {Requestable.callback} cb - will receive the list of deploy keys\n    * @return {Promise} - the promise for the http request\n    */\n   listKeys(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/keys`, null, cb);\n   }\n\n   /**\n    * Get a deploy key for the repository\n    * @see https://developer.github.com/v3/repos/keys/#get-a-deploy-key\n    * @param {number} id - the id of the deploy key\n    * @param {Requestable.callback} cb - will receive the details of the deploy key\n    * @return {Promise} - the promise for the http request\n    */\n   getKey(id, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/keys/${id}`, null, cb);\n   }\n\n   /**\n    * Add a new deploy key to the repository\n    * @see https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key\n    * @param {Object} options - the configuration describing the new deploy key\n    * @param {Requestable.callback} cb - will receive the new deploy key\n    * @return {Promise} - the promise for the http request\n    */\n   createKey(options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/keys`, options, cb);\n   }\n\n   /**\n    * Delete a deploy key\n    * @see https://developer.github.com/v3/repos/keys/#remove-a-deploy-key\n    * @param {number} id - the id of the deploy key to be deleted\n    * @param {Requestable.callback} cb - will receive true if the call is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteKey(id, cb) {\n      return this._request('DELETE', `/repos/${this.__fullname}/keys/${id}`, null, cb);\n   }\n\n   /**\n    * Delete a file from a branch\n    * @see https://developer.github.com/v3/repos/contents/#delete-a-file\n    * @param {string} branch - the branch to delete from, or the default branch if not specified\n    * @param {string} path - the path of the file to remove\n    * @param {Requestable.callback} cb - will receive the commit in which the delete occurred\n    * @return {Promise} - the promise for the http request\n    */\n   deleteFile(branch, path, cb) {\n      return this.getSha(branch, path)\n         .then((response) => {\n            const deleteCommit = {\n               message: `Delete the file at '${path}'`,\n               sha: response.data.sha,\n               branch,\n            };\n            return this._request('DELETE', `/repos/${this.__fullname}/contents/${path}`, deleteCommit, cb);\n         });\n   }\n\n   /**\n    * Change all references in a repo from oldPath to new_path\n    * @param {string} branch - the branch to carry out the reference change, or the default branch if not specified\n    * @param {string} oldPath - original path\n    * @param {string} newPath - new reference path\n    * @param {Requestable.callback} cb - will receive the commit in which the move occurred\n    * @return {Promise} - the promise for the http request\n    */\n   move(branch, oldPath, newPath, cb) {\n      let oldSha;\n      return this.getRef(`heads/${branch}`)\n         .then(({data: {object}}) => this.getTree(`${object.sha}?recursive=true`))\n         .then(({data: {tree, sha}}) => {\n            oldSha = sha;\n            let newTree = tree.map((ref) => {\n               if (ref.path === oldPath) {\n                  ref.path = newPath;\n               }\n               if (ref.type === 'tree') {\n                  delete ref.sha;\n               }\n               return ref;\n            });\n            return this.createTree(newTree);\n         })\n         .then(({data: tree}) => this.commit(oldSha, tree.sha, `Renamed '${oldPath}' to '${newPath}'`))\n         .then(({data: commit}) => this.updateHead(`heads/${branch}`, commit.sha, true, cb));\n   }\n\n   /**\n    * Write a file to the repository\n    * @see https://developer.github.com/v3/repos/contents/#update-a-file\n    * @param {string} branch - the name of the branch\n    * @param {string} path - the path for the file\n    * @param {string} content - the contents of the file\n    * @param {string} message - the commit message\n    * @param {Object} [options] - commit options\n    * @param {Object} [options.author] - the author of the commit\n    * @param {Object} [options.commiter] - the committer\n    * @param {boolean} [options.encode] - true if the content should be base64 encoded\n    * @param {Requestable.callback} cb - will receive the new commit\n    * @return {Promise} - the promise for the http request\n    */\n   writeFile(branch, path, content, message, options, cb) {\n      options = options || {};\n      if (typeof options === 'function') {\n         cb = options;\n         options = {};\n      }\n      let filePath = path ? encodeURI(path) : '';\n      let shouldEncode = options.encode !== false;\n      let commit = {\n         branch,\n         message,\n         author: options.author,\n         committer: options.committer,\n         content: shouldEncode ? Base64.encode(content) : content,\n      };\n\n      return this.getSha(branch, filePath)\n         .then((response) => {\n            commit.sha = response.data.sha;\n            return this._request('PUT', `/repos/${this.__fullname}/contents/${filePath}`, commit, cb);\n         }, () => {\n            return this._request('PUT', `/repos/${this.__fullname}/contents/${filePath}`, commit, cb);\n         });\n   }\n\n   /**\n    * Check if a repository is starred by you\n    * @see https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository\n    * @param {Requestable.callback} cb - will receive true if the repository is starred and false if the repository\n    *                                  is not starred\n    * @return {Promise} - the promise for the http request {Boolean} [description]\n    */\n   isStarred(cb) {\n      return this._request204or404(`/user/starred/${this.__fullname}`, null, cb);\n   }\n\n   /**\n    * Star a repository\n    * @see https://developer.github.com/v3/activity/starring/#star-a-repository\n    * @param {Requestable.callback} cb - will receive true if the repository is starred\n    * @return {Promise} - the promise for the http request\n    */\n   star(cb) {\n      return this._request('PUT', `/user/starred/${this.__fullname}`, null, cb);\n   }\n\n   /**\n    * Unstar a repository\n    * @see https://developer.github.com/v3/activity/starring/#unstar-a-repository\n    * @param {Requestable.callback} cb - will receive true if the repository is unstarred\n    * @return {Promise} - the promise for the http request\n    */\n   unstar(cb) {\n      return this._request('DELETE', `/user/starred/${this.__fullname}`, null, cb);\n   }\n\n   /**\n    * Create a new release\n    * @see https://developer.github.com/v3/repos/releases/#create-a-release\n    * @param {Object} options - the description of the release\n    * @param {Requestable.callback} cb - will receive the newly created release\n    * @return {Promise} - the promise for the http request\n    */\n   createRelease(options, cb) {\n      return this._request('POST', `/repos/${this.__fullname}/releases`, options, cb);\n   }\n\n   /**\n    * Edit a release\n    * @see https://developer.github.com/v3/repos/releases/#edit-a-release\n    * @param {string} id - the id of the release\n    * @param {Object} options - the description of the release\n    * @param {Requestable.callback} cb - will receive the modified release\n    * @return {Promise} - the promise for the http request\n    */\n   updateRelease(id, options, cb) {\n      return this._request('PATCH', `/repos/${this.__fullname}/releases/${id}`, options, cb);\n   }\n\n   /**\n    * Get information about all releases\n    * @see https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository\n    * @param {Requestable.callback} cb - will receive the release information\n    * @return {Promise} - the promise for the http request\n    */\n   listReleases(cb) {\n      return this._request('GET', `/repos/${this.__fullname}/releases`, null, cb);\n   }\n\n   /**\n    * Get information about a release\n    * @see https://developer.github.com/v3/repos/releases/#get-a-single-release\n    * @param {string} id - the id of the release\n    * @param {Requestable.callback} cb - will receive the release information\n    * @return {Promise} - the promise for the http request\n    */\n   getRelease(id, cb) {\n      return this._request('GET', `/repos/${this.__fullname}/releases/${id}`, null, cb);\n   }\n\n   /**\n    * Delete a release\n    * @see https://developer.github.com/v3/repos/releases/#delete-a-release\n    * @param {string} id - the release to be deleted\n    * @param {Requestable.callback} cb - will receive true if the operation is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteRelease(id, cb) {\n      return this._request('DELETE', `/repos/${this.__fullname}/releases/${id}`, null, cb);\n   }\n\n   /**\n    * Merge a pull request\n    * @see https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button\n    * @param {number|string} number - the number of the pull request to merge\n    * @param {Object} options - the merge options for the pull request\n    * @param {Requestable.callback} [cb] - will receive the merge information if the operation is successful\n    * @return {Promise} - the promise for the http request\n    */\n   mergePullRequest(number, options, cb) {\n      return this._request('PUT', `/repos/${this.__fullname}/pulls/${number}/merge`, options, cb);\n   }\n\n   /**\n    * Get information about all projects\n    * @see https://developer.github.com/v3/projects/#list-repository-projects\n    * @param {Requestable.callback} [cb] - will receive the list of projects\n    * @return {Promise} - the promise for the http request\n    */\n   listProjects(cb) {\n      return this._requestAllPages(`/repos/${this.__fullname}/projects`, {AcceptHeader: 'inertia-preview'}, cb);\n   }\n\n   /**\n    * Create a new project\n    * @see https://developer.github.com/v3/projects/#create-a-repository-project\n    * @param {Object} options - the description of the project\n    * @param {Requestable.callback} cb - will receive the newly created project\n    * @return {Promise} - the promise for the http request\n    */\n   createProject(options, cb) {\n      options = options || {};\n      options.AcceptHeader = 'inertia-preview';\n      return this._request('POST', `/repos/${this.__fullname}/projects`, options, cb);\n   }\n\n}\n\nmodule.exports = Repository;\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * Organization encapsulates the functionality to create repositories in organizations\n */\nclass Organization extends Requestable {\n   /**\n    * Create a new Organization\n    * @param {string} organization - the name of the organization\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(organization, auth, apiBase) {\n      super(auth, apiBase);\n      this.__name = organization;\n   }\n\n   /**\n    * Create a repository in an organization\n    * @see https://developer.github.com/v3/repos/#create\n    * @param {Object} options - the repository definition\n    * @param {Requestable.callback} [cb] - will receive the created repository\n    * @return {Promise} - the promise for the http request\n    */\n   createRepo(options, cb) {\n      return this._request('POST', `/orgs/${this.__name}/repos`, options, cb);\n   }\n\n   /**\n    * List the repositories in an organization\n    * @see https://developer.github.com/v3/repos/#list-organization-repositories\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   getRepos(cb) {\n      let requestOptions = this._getOptionsWithDefaults({direction: 'desc'});\n\n      return this._requestAllPages(`/orgs/${this.__name}/repos`, requestOptions, cb);\n   }\n\n   /**\n    * Query if the user is a member or not\n    * @param {string} username - the user in question\n    * @param {Requestable.callback} [cb] - will receive true if the user is a member\n    * @return {Promise} - the promise for the http request\n    */\n   isMember(username, cb) {\n      return this._request204or404(`/orgs/${this.__name}/members/${username}`, null, cb);\n   }\n\n   /**\n    * List the users who are members of the company\n    * @see https://developer.github.com/v3/orgs/members/#members-list\n    * @param {object} options - filtering options\n    * @param {string} [options.filter=all] - can be either `2fa_disabled` or `all`\n    * @param {string} [options.role=all] - can be one of: `all`, `admin`, or `member`\n    * @param {Requestable.callback} [cb] - will receive the list of users\n    * @return {Promise} - the promise for the http request\n    */\n   listMembers(options, cb) {\n      return this._request('GET', `/orgs/${this.__name}/members`, options, cb);\n   }\n\n   /**\n    * List the Teams in the Organization\n    * @see https://developer.github.com/v3/orgs/teams/#list-teams\n    * @param {Requestable.callback} [cb] - will receive the list of teams\n    * @return {Promise} - the promise for the http request\n    */\n   getTeams(cb) {\n      return this._requestAllPages(`/orgs/${this.__name}/teams`, undefined, cb);\n   }\n\n   /**\n    * Create a team\n    * @see https://developer.github.com/v3/orgs/teams/#create-team\n    * @param {object} options - Team creation parameters\n    * @param {string} options.name - The name of the team\n    * @param {string} [options.description] - Team description\n    * @param {string} [options.repo_names] - Repos to add the team to\n    * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one\n    * of: `secret`, or `closed`\n    * @param {Requestable.callback} [cb] - will receive the created team\n    * @return {Promise} - the promise for the http request\n    */\n   createTeam(options, cb) {\n      return this._request('POST', `/orgs/${this.__name}/teams`, options, cb);\n   }\n\n   /**\n    * Get information about all projects\n    * @see https://developer.github.com/v3/projects/#list-organization-projects\n    * @param {Requestable.callback} [cb] - will receive the list of projects\n    * @return {Promise} - the promise for the http request\n    */\n   listProjects(cb) {\n      return this._requestAllPages(`/orgs/${this.__name}/projects`, {AcceptHeader: 'inertia-preview'}, cb);\n   }\n\n   /**\n    * Create a new project\n    * @see https://developer.github.com/v3/repos/projects/#create-a-project\n    * @param {Object} options - the description of the project\n    * @param {Requestable.callback} cb - will receive the newly created project\n    * @return {Promise} - the promise for the http request\n    */\n   createProject(options, cb) {\n      options = options || {};\n      options.AcceptHeader = 'inertia-preview';\n      return this._request('POST', `/orgs/${this.__name}/projects`, options, cb);\n   }\n}\n\nmodule.exports = Organization;\n","/**\n * @file\n * @copyright  2016 Matt Smith (Development Seed)\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\nimport debug from 'debug';\nconst log = debug('github:team');\n\n/**\n * A Team allows scoping of API requests to a particular Github Organization Team.\n */\nclass Team extends Requestable {\n   /**\n    * Create a Team.\n    * @param {string} [teamId] - the id for the team\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(teamId, auth, apiBase) {\n      super(auth, apiBase);\n      this.__teamId = teamId;\n   }\n\n   /**\n    * Get Team information\n    * @see https://developer.github.com/v3/orgs/teams/#get-team\n    * @param {Requestable.callback} [cb] - will receive the team\n    * @return {Promise} - the promise for the http request\n    */\n   getTeam(cb) {\n      log(`Fetching Team ${this.__teamId}`);\n      return this._request('Get', `/teams/${this.__teamId}`, undefined, cb);\n   }\n\n   /**\n    * List the Team's repositories\n    * @see https://developer.github.com/v3/orgs/teams/#list-team-repos\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   listRepos(cb) {\n      log(`Fetching repositories for Team ${this.__teamId}`);\n      return this._requestAllPages(`/teams/${this.__teamId}/repos`, undefined, cb);\n   }\n\n   /**\n    * Edit Team information\n    * @see https://developer.github.com/v3/orgs/teams/#edit-team\n    * @param {object} options - Parameters for team edit\n    * @param {string} options.name - The name of the team\n    * @param {string} [options.description] - Team description\n    * @param {string} [options.repo_names] - Repos to add the team to\n    * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one\n    * of: `secret`, or `closed`\n    * @param {Requestable.callback} [cb] - will receive the updated team\n    * @return {Promise} - the promise for the http request\n    */\n   editTeam(options, cb) {\n      log(`Editing Team ${this.__teamId}`);\n      return this._request('PATCH', `/teams/${this.__teamId}`, options, cb);\n   }\n\n   /**\n    * List the users who are members of the Team\n    * @see https://developer.github.com/v3/orgs/teams/#list-team-members\n    * @param {object} options - Parameters for listing team users\n    * @param {string} [options.role=all] - can be one of: `all`, `maintainer`, or `member`\n    * @param {Requestable.callback} [cb] - will receive the list of users\n    * @return {Promise} - the promise for the http request\n    */\n   listMembers(options, cb) {\n      log(`Getting members of Team ${this.__teamId}`);\n      return this._requestAllPages(`/teams/${this.__teamId}/members`, options, cb);\n   }\n\n   /**\n    * Get Team membership status for a user\n    * @see https://developer.github.com/v3/orgs/teams/#get-team-membership\n    * @param {string} username - can be one of: `all`, `maintainer`, or `member`\n    * @param {Requestable.callback} [cb] - will receive the membership status of a user\n    * @return {Promise} - the promise for the http request\n    */\n   getMembership(username, cb) {\n      log(`Getting membership of user ${username} in Team ${this.__teamId}`);\n      return this._request('GET', `/teams/${this.__teamId}/memberships/${username}`, undefined, cb);\n   }\n\n   /**\n    * Add a member to the Team\n    * @see https://developer.github.com/v3/orgs/teams/#add-team-membership\n    * @param {string} username - can be one of: `all`, `maintainer`, or `member`\n    * @param {object} options - Parameters for adding a team member\n    * @param {string} [options.role=member] - The role that this user should have in the team. Can be one\n    * of: `member`, or `maintainer`\n    * @param {Requestable.callback} [cb] - will receive the membership status of added user\n    * @return {Promise} - the promise for the http request\n    */\n   addMembership(username, options, cb) {\n      log(`Adding user ${username} to Team ${this.__teamId}`);\n      return this._request('PUT', `/teams/${this.__teamId}/memberships/${username}`, options, cb);\n   }\n\n   /**\n    * Get repo management status for team\n    * @see https://developer.github.com/v3/orgs/teams/#remove-team-membership\n    * @param {string} owner - Organization name\n    * @param {string} repo - Repo name\n    * @param {Requestable.callback} [cb] - will receive the membership status of added user\n    * @return {Promise} - the promise for the http request\n    */\n   isManagedRepo(owner, repo, cb) {\n      log(`Getting repo management by Team ${this.__teamId} for repo ${owner}/${repo}`);\n      return this._request204or404(`/teams/${this.__teamId}/repos/${owner}/${repo}`, undefined, cb);\n   }\n\n   /**\n    * Add or Update repo management status for team\n    * @see https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository\n    * @param {string} owner - Organization name\n    * @param {string} repo - Repo name\n    * @param {object} options - Parameters for adding or updating repo management for the team\n    * @param {string} [options.permission] - The permission to grant the team on this repository. Can be one\n    * of: `pull`, `push`, or `admin`\n    * @param {Requestable.callback} [cb] - will receive the membership status of added user\n    * @return {Promise} - the promise for the http request\n    */\n   manageRepo(owner, repo, options, cb) {\n      log(`Adding or Updating repo management by Team ${this.__teamId} for repo ${owner}/${repo}`);\n      return this._request204or404(`/teams/${this.__teamId}/repos/${owner}/${repo}`, options, cb, 'PUT');\n   }\n\n   /**\n    * Remove repo management status for team\n    * @see https://developer.github.com/v3/orgs/teams/#remove-team-repository\n    * @param {string} owner - Organization name\n    * @param {string} repo - Repo name\n    * @param {Requestable.callback} [cb] - will receive the membership status of added user\n    * @return {Promise} - the promise for the http request\n    */\n   unmanageRepo(owner, repo, cb) {\n      log(`Remove repo management by Team ${this.__teamId} for repo ${owner}/${repo}`);\n      return this._request204or404(`/teams/${this.__teamId}/repos/${owner}/${repo}`, undefined, cb, 'DELETE');\n   }\n\n   /**\n    * Delete Team\n    * @see https://developer.github.com/v3/orgs/teams/#delete-team\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   deleteTeam(cb) {\n      log(`Deleting Team ${this.__teamId}`);\n      return this._request204or404(`/teams/${this.__teamId}`, undefined, cb, 'DELETE');\n   }\n}\n\nmodule.exports = Team;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * Renders html from Markdown text\n */\nclass Markdown extends Requestable {\n   /**\n    * construct a Markdown\n    * @param {Requestable.auth} auth - the credentials to authenticate to GitHub\n    * @param {string} [apiBase] - the base Github API URL\n    * @return {Promise} - the promise for the http request\n    */\n   constructor(auth, apiBase) {\n      super(auth, apiBase);\n   }\n\n   /**\n    * Render html from Markdown text.\n    * @see https://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document\n    * @param {Object} options - conversion options\n    * @param {string} [options.text] - the markdown text to convert\n    * @param {string} [options.mode=markdown] - can be either `markdown` or `gfm`\n    * @param {string} [options.context] - repository name if mode is gfm\n    * @param {Requestable.callback} [cb] - will receive the converted html\n    * @return {Promise} - the promise for the http request\n    */\n   render(options, cb) {\n      return this._request('POST', '/markdown', options, cb, true);\n   }\n}\n\nmodule.exports = Markdown;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\n\n/**\n * Project encapsulates the functionality to create, query, and modify cards and columns.\n */\nclass Project extends Requestable {\n   /**\n    * Create a Project.\n    * @param {string} id - the id of the project\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(id, auth, apiBase) {\n      super(auth, apiBase, 'inertia-preview');\n      this.__id = id;\n   }\n\n   /**\n    * Get information about a project\n    * @see https://developer.github.com/v3/projects/#get-a-project\n    * @param {Requestable.callback} cb - will receive the project information\n    * @return {Promise} - the promise for the http request\n    */\n   getProject(cb) {\n      return this._request('GET', `/projects/${this.__id}`, null, cb);\n   }\n\n   /**\n    * Edit a project\n    * @see https://developer.github.com/v3/projects/#update-a-project\n    * @param {Object} options - the description of the project\n    * @param {Requestable.callback} cb - will receive the modified project\n    * @return {Promise} - the promise for the http request\n    */\n   updateProject(options, cb) {\n      return this._request('PATCH', `/projects/${this.__id}`, options, cb);\n   }\n\n   /**\n    * Delete a project\n    * @see https://developer.github.com/v3/projects/#delete-a-project\n    * @param {Requestable.callback} cb - will receive true if the operation is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteProject(cb) {\n      return this._request('DELETE', `/projects/${this.__id}`, null, cb);\n   }\n\n   /**\n    * Get information about all columns of a project\n    * @see https://developer.github.com/v3/projects/columns/#list-project-columns\n    * @param {Requestable.callback} [cb] - will receive the list of columns\n    * @return {Promise} - the promise for the http request\n    */\n   listProjectColumns(cb) {\n      return this._requestAllPages(`/projects/${this.__id}/columns`, null, cb);\n   }\n\n   /**\n    * Get information about a column\n    * @see https://developer.github.com/v3/projects/columns/#get-a-project-column\n    * @param {string} colId - the id of the column\n    * @param {Requestable.callback} cb - will receive the column information\n    * @return {Promise} - the promise for the http request\n    */\n   getProjectColumn(colId, cb) {\n      return this._request('GET', `/projects/columns/${colId}`, null, cb);\n   }\n\n   /**\n    * Create a new column\n    * @see https://developer.github.com/v3/projects/columns/#create-a-project-column\n    * @param {Object} options - the description of the column\n    * @param {Requestable.callback} cb - will receive the newly created column\n    * @return {Promise} - the promise for the http request\n    */\n   createProjectColumn(options, cb) {\n      return this._request('POST', `/projects/${this.__id}/columns`, options, cb);\n   }\n\n   /**\n    * Edit a column\n    * @see https://developer.github.com/v3/projects/columns/#update-a-project-column\n    * @param {string} colId - the column id\n    * @param {Object} options - the description of the column\n    * @param {Requestable.callback} cb - will receive the modified column\n    * @return {Promise} - the promise for the http request\n    */\n   updateProjectColumn(colId, options, cb) {\n      return this._request('PATCH', `/projects/columns/${colId}`, options, cb);\n   }\n\n   /**\n    * Delete a column\n    * @see https://developer.github.com/v3/projects/columns/#delete-a-project-column\n    * @param {string} colId - the column to be deleted\n    * @param {Requestable.callback} cb - will receive true if the operation is successful\n    * @return {Promise} - the promise for the http request\n    */\n   deleteProjectColumn(colId, cb) {\n      return this._request('DELETE', `/projects/columns/${colId}`, null, cb);\n   }\n\n   /**\n    * Move a column\n    * @see https://developer.github.com/v3/projects/columns/#move-a-project-column\n    * @param {string} colId - the column to be moved\n    * @param {string} position - can be one of first, last, or after:<column-id>,\n    * where <column-id> is the id value of a column in the same project.\n    * @param {Requestable.callback} cb - will receive true if the operation is successful\n    * @return {Promise} - the promise for the http request\n    */\n   moveProjectColumn(colId, position, cb) {\n      return this._request(\n         'POST',\n         `/projects/columns/${colId}/moves`,\n         {position: position},\n         cb\n      );\n   }\n\n  /**\n   * Get information about all cards of a project\n   * @see https://developer.github.com/v3/projects/cards/#list-project-cards\n   * @param {Requestable.callback} [cb] - will receive the list of cards\n   * @return {Promise} - the promise for the http request\n   */\n   listProjectCards(cb) {\n      return this.listProjectColumns()\n        .then(({data}) => {\n           return Promise.all(data.map((column) => {\n              return this._requestAllPages(`/projects/columns/${column.id}/cards`, null);\n           }));\n        }).then((cardsInColumns) => {\n           const cards = cardsInColumns.reduce((prev, {data}) => {\n              prev.push(...data);\n              return prev;\n           }, []);\n           if (cb) {\n              cb(null, cards);\n           }\n           return cards;\n        }).catch((err) => {\n           if (cb) {\n              cb(err);\n              return;\n           }\n           throw err;\n        });\n   }\n\n   /**\n   * Get information about all cards of a column\n   * @see https://developer.github.com/v3/projects/cards/#list-project-cards\n   * @param {string} colId - the id of the column\n   * @param {Requestable.callback} [cb] - will receive the list of cards\n   * @return {Promise} - the promise for the http request\n   */\n   listColumnCards(colId, cb) {\n      return this._requestAllPages(`/projects/columns/${colId}/cards`, null, cb);\n   }\n\n   /**\n   * Get information about a card\n   * @see https://developer.github.com/v3/projects/cards/#get-a-project-card\n   * @param {string} cardId - the id of the card\n   * @param {Requestable.callback} cb - will receive the card information\n   * @return {Promise} - the promise for the http request\n   */\n   getProjectCard(cardId, cb) {\n      return this._request('GET', `/projects/columns/cards/${cardId}`, null, cb);\n   }\n\n   /**\n   * Create a new card\n   * @see https://developer.github.com/v3/projects/cards/#create-a-project-card\n   * @param {string} colId - the column id\n   * @param {Object} options - the description of the card\n   * @param {Requestable.callback} cb - will receive the newly created card\n   * @return {Promise} - the promise for the http request\n   */\n   createProjectCard(colId, options, cb) {\n      return this._request('POST', `/projects/columns/${colId}/cards`, options, cb);\n   }\n\n   /**\n   * Edit a card\n   * @see https://developer.github.com/v3/projects/cards/#update-a-project-card\n   * @param {string} cardId - the card id\n   * @param {Object} options - the description of the card\n   * @param {Requestable.callback} cb - will receive the modified card\n   * @return {Promise} - the promise for the http request\n   */\n   updateProjectCard(cardId, options, cb) {\n      return this._request('PATCH', `/projects/columns/cards/${cardId}`, options, cb);\n   }\n\n   /**\n   * Delete a card\n   * @see https://developer.github.com/v3/projects/cards/#delete-a-project-card\n   * @param {string} cardId - the card to be deleted\n   * @param {Requestable.callback} cb - will receive true if the operation is successful\n   * @return {Promise} - the promise for the http request\n   */\n   deleteProjectCard(cardId, cb) {\n      return this._request('DELETE', `/projects/columns/cards/${cardId}`, null, cb);\n   }\n\n   /**\n   * Move a card\n   * @see https://developer.github.com/v3/projects/cards/#move-a-project-card\n   * @param {string} cardId - the card to be moved\n   * @param {string} position - can be one of top, bottom, or after:<card-id>,\n   * where <card-id> is the id value of a card in the same project.\n   * @param {string} colId - the id value of a column in the same project.\n   * @param {Requestable.callback} cb - will receive true if the operation is successful\n   * @return {Promise} - the promise for the http request\n   */\n   moveProjectCard(cardId, position, colId, cb) {\n      return this._request(\n         'POST',\n         `/projects/columns/cards/${cardId}/moves`,\n         {position: position, column_id: colId}, // eslint-disable-line camelcase\n         cb\n      );\n   }\n}\n\nmodule.exports = Project;\n","/**\n * @file\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\n *             Github.js is freely distributable.\n */\n/* eslint valid-jsdoc: [\"error\", {\"requireReturnDescription\": false}] */\n\nimport Gist from './Gist';\nimport User from './User';\nimport Issue from './Issue';\nimport Search from './Search';\nimport RateLimit from './RateLimit';\nimport Repository from './Repository';\nimport Organization from './Organization';\nimport Team from './Team';\nimport Markdown from './Markdown';\nimport Project from './Project';\n\n/**\n * GitHub encapsulates the functionality to create various API wrapper objects.\n */\nclass GitHub {\n   /**\n    * Create a new GitHub.\n    * @param {Requestable.auth} [auth] - the credentials to authenticate to Github. If auth is\n    *                                  not provided requests will be made unauthenticated\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\n    */\n   constructor(auth, apiBase = 'https://api.github.com') {\n      this.__apiBase = apiBase;\n      this.__auth = auth || {};\n   }\n\n   /**\n    * Create a new Gist wrapper\n    * @param {string} [id] - the id for the gist, leave undefined when creating a new gist\n    * @return {Gist}\n    */\n   getGist(id) {\n      return new Gist(id, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new User wrapper\n    * @param {string} [user] - the name of the user to get information about\n    *                        leave undefined for the authenticated user\n    * @return {User}\n    */\n   getUser(user) {\n      return new User(user, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Organization wrapper\n    * @param {string} organization - the name of the organization\n    * @return {Organization}\n    */\n   getOrganization(organization) {\n      return new Organization(organization, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * create a new Team wrapper\n    * @param {string} teamId - the name of the team\n    * @return {team}\n    */\n   getTeam(teamId) {\n      return new Team(teamId, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Repository wrapper\n    * @param {string} user - the user who owns the repository\n    * @param {string} repo - the name of the repository\n    * @return {Repository}\n    */\n   getRepo(user, repo) {\n      return new Repository(this._getFullName(user, repo), this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Issue wrapper\n    * @param {string} user - the user who owns the repository\n    * @param {string} repo - the name of the repository\n    * @return {Issue}\n    */\n   getIssues(user, repo) {\n      return new Issue(this._getFullName(user, repo), this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Search wrapper\n    * @param {string} query - the query to search for\n    * @return {Search}\n    */\n   search(query) {\n      return new Search(query, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new RateLimit wrapper\n    * @return {RateLimit}\n    */\n   getRateLimit() {\n      return new RateLimit(this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Markdown wrapper\n    * @return {Markdown}\n    */\n   getMarkdown() {\n      return new Markdown(this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Project wrapper\n    * @param {string} id - the id of the project\n    * @return {Project}\n    */\n   getProject(id) {\n      return new Project(id, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Computes the full repository name\n    * @param {string} user - the username (or the full name)\n    * @param {string} repo - the repository name, must not be passed if `user` is the full name\n    * @return {string} the repository's full name\n    */\n   _getFullName(user, repo) {\n      let fullname = user;\n\n      if (repo) {\n         fullname = `${user}/${repo}`;\n      }\n\n      return fullname;\n   }\n}\n\nmodule.exports = GitHub;\n"],"sourceRoot":""}